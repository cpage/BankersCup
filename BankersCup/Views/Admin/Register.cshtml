@model BankersCup.Models.Team

@{
    ViewBag.Title = "Registration";
}

<h2>Registration</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Registration</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TeamId)

        <div class="form-group">
            @Html.LabelFor(model => model.TeamName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TeamName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TeamName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="playerList">
            <h4>Team Members</h4>
            <div class="player">
                @Html.LabelFor(model => model.Players[0].Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Players[0].Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Players[0].Name, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.Players[0].Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Players[0].Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Players[0].Email, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.Players[0].Company, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Players[0].Company, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Players[0].Company, "", new { @class = "text-danger" })
                </div>
            </div>

            
        </div>
        <p id="addPlayerLink">Add Player</p>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script>
        var playerTemplate = "<div class=\"player\">"
+ "                <label class=\"control-label col-md-2\" for=\"Players_idx__Name\">Name</label>"
+ "                <div class=\"col-md-10\">"
+ "                    <input class=\"form-control text-box single-line\" id=\"Players_idx__Name\" name=\"Players[idx].Name\" type=\"text\" value=\"\" />"
+ "                    <span class=\"field-validation-valid text-danger\" data-valmsg-for=\"Players[|idx].Name\" data-valmsg-replace=\"true\"></span>"
+ "                </div>"
+ ""
+ "                <label class=\"control-label col-md-2\" for=\"Players_idx__Email\">Email</label>"
+ "                <div class=\"col-md-10\">"
+ "                    <input class=\"form-control text-box single-line\" id=\"Players_idx__Email\" name=\"Players[idx].Email\" type=\"text\" value=\"\" />"
+ "                    <span class=\"field-validation-valid text-danger\" data-valmsg-for=\"Players[idx].Email\" data-valmsg-replace=\"true\"></span>"
+ "                </div>"
+ ""
+ "                <label class=\"control-label col-md-2\" for=\"Players_idx__Company\">Company</label>"
+ "                <div class=\"col-md-10\">"
+ "                    <input class=\"form-control text-box single-line\" id=\"Players_idx__Company\" name=\"Players[idx].Company\" type=\"text\" value=\"\" />"
+ "                    <span class=\"field-validation-valid text-danger\" data-valmsg-for=\"Players[idx].Company\" data-valmsg-replace=\"true\"></span>"
+ "                </div>"
+ "            </div>"
+ "</div>";

        $(document).ready(function () {
            $("#addPlayerLink").click(addNewPlayer);
        });

        function addNewPlayer()
        {
            var nextIndex = $("div.player").length;
            $("#playerList").append(playerTemplate.replace(/idx/g, nextIndex));
        }
    </script>
}