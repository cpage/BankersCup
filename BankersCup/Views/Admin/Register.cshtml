@model BankersCup.Models.Team

@{
    ViewBag.Title = "Registration";
}

<h2>Registration</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Registration</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TeamId)

        <div class="form-group">
            @Html.LabelFor(model => model.TeamName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TeamName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TeamName, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.RegistrationCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RegistrationCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RegistrationCode, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.StartingHole, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartingHole, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartingHole, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.TeeTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="form-control text-box single-line" data-val="true" data-val-date="The field TeeTime must be a date." data-val-required="The TeeTime field is required." id="TeeTime" name="TeeTime" type="datetime" value="@Model.TeeTime.ToString("HH:mm tt")" />
                @Html.ValidationMessageFor(model => model.TeeTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="playerList">
            <h4>Team Members</h4>
            @for(var count=0; count < Model.Players.Count; count++)
            { 
                <div class="player">
                    @Html.LabelFor(model => model.Players[count].Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Players[count].Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Players[count].Name, "", new { @class = "text-danger" })
                    </div>

                    @Html.LabelFor(model => model.Players[count].Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Players[count].Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Players[count].Email, "", new { @class = "text-danger" })
                    </div>

                    @Html.LabelFor(model => model.Players[count].Company, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Players[count].Company, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Players[count].Company, "", new { @class = "text-danger" })
                    </div>
                    @Html.HiddenFor(model => model.Players[count].IsRemoved)
                    <span>Remove Player</span>
                </div>
            }

        </div>
        <p id="addPlayerLink">Add Player</p>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
@*    @Html.ActionLink("Back to List", "Index", )*@
</div>

@section Scripts {
    <script>
        var playerTemplate = "<div class=\"player\">"
+ "                <label class=\"control-label col-md-2\" for=\"Players_idx__Name\">Name</label>"
+ "                <div class=\"col-md-10\">"
+ "                    <input class=\"form-control text-box single-line\" id=\"Players_idx__Name\" name=\"Players[idx].Name\" type=\"text\" value=\"\" />"
+ "                    <span class=\"field-validation-valid text-danger\" data-valmsg-for=\"Players[|idx].Name\" data-valmsg-replace=\"true\"></span>"
+ "                </div>"
+ ""
+ "                <label class=\"control-label col-md-2\" for=\"Players_idx__Email\">Email</label>"
+ "                <div class=\"col-md-10\">"
+ "                    <input class=\"form-control text-box single-line\" id=\"Players_idx__Email\" name=\"Players[idx].Email\" type=\"text\" value=\"\" />"
+ "                    <span class=\"field-validation-valid text-danger\" data-valmsg-for=\"Players[idx].Email\" data-valmsg-replace=\"true\"></span>"
+ "                </div>"
+ ""
+ "                <label class=\"control-label col-md-2\" for=\"Players_idx__Company\">Company</label>"
+ "                <div class=\"col-md-10\">"
+ "                    <input class=\"form-control text-box single-line\" id=\"Players_idx__Company\" name=\"Players[idx].Company\" type=\"text\" value=\"\" />"
+ "                    <span class=\"field-validation-valid text-danger\" data-valmsg-for=\"Players[idx].Company\" data-valmsg-replace=\"true\"></span>"
+ "                </div>"
+ "                <input data-val=\"true\" data-val-required=\"The IsRemoved field is required.\" id=\"Players_idx__IsRemoved\" name=\"Players[idx].IsRemoved\" type=\"hidden\" value=\"False\" />"
+ "                <span>Remove Player</span>"
+ "            </div>"
+ "</div>";

        $(document).ready(function () {
            $("#addPlayerLink").click(addNewPlayer);
            $("div.player > span").each(function (i, e) {
                $(this).click(function () {
                    removePlayer($(this));
                });
            });
        });

        function addNewPlayer() {
            var nextIndex = $("div.player").length;
            $("#playerList").append(playerTemplate.replace(/idx/g, nextIndex));
            $("div.player > span").last().click(function () {
                removePlayer($(this));
            });
        }

        function removePlayer(spanObj) {
            spanObj.parent().hide();
            spanObj.parent().find("input[type='hidden']").val("True");

        }

    </script>
}